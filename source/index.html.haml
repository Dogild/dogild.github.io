#hero
  .container
    .row.animated.fadeInDown
      .span12
        #myCarousel.carousel.slide
          .carousel-inner
            .active.item.slide1
              .row
                .offset1.span4
                  %img{:alt => "slide1", :src => "img/cappuccino-icon.png"}
                .span4
                  %h1
                    Modern App Development for the Web
                  %p
                    Cappuccino is a framework which makes it easy to create advanced web apps. With just a few lines of code you can have an app built with full undo and redo, truly amazing table views, drag and drop and every modern UI appearance and behaviour you might expect on the desktop.
                  %a.scroller.btn.btn-success.btn-large{:href => "/downloads.html#download"}
                    Download Cappuccino

            .item.slide2
              .row
                .offset1.span4.animated.fadeInUpBig
                  %h1 Write an App, not a Document
                  %p
                    When you program in Cappuccino, you don't need to concern yourself with the complexities of document-focused web technologies like HTML, CSS, or even the DOM. Cappuccino is focused on making apps and the unpleasantries of building complex cross browser applications are abstracted away for you.
                  %a.btn.btn-success.btn-large.scroller{:href => "/#features"}
                    Learn More
                .span4.animated.fadeInDownBig
                  %img{:alt => "slide2", :src => "img/slide2.jpg"}
          %a.carousel-control.left{"data-slide" => "prev", :href => "#myCarousel"} &lsaquo;
          %a.carousel-control.right{"data-slide" => "next", :href => "#myCarousel"} &rsaquo;
#intro
  .container
    %h1
      Cappuccino is an open source framework that makes it easy to build desktop-caliber applications that run in a web browser.
#features-section
  .container
    %h2.section_header
      %hr.left.visible-desktop
      %span Features
      %a{:name=>'features'} &nbsp;
      %hr.right.visible-desktop
    .row
      .span4.feature
        %img.thumb{:alt => "Objective-J code", :src => "img/feature-objective-j.jpg"}
        %h3
          %img{:alt => "Lightning", :src => "img/lightning.png"}
          Objective-J Language
        %p.description
          Objective-J is a powerful object-oriented language which compiles to run in the browser. Because Objective-J is a superset of JavaScript, it's easy to mix and match. Objective-J extends JavaScript with traditional inheritance and Smalltalk/Objective-C style dynamic dispatch.
        %a.btn.btn-default{:href => "/learn/objective-j.html"} Learn
      .span4.feature
        %img.thumb{:alt => "Fish", :src => "img/feature-widgets.jpg"}/
        %h3
          %img{:alt => "Fish", :src => "img/fish.png"}
          Stunning Controls
        %p.description
          Cappuccino's AppKit ships with a huge number of controls, each polished far beyond what's expected on the web. You can quickly build complex apps without reinventing the wheel every time you need a scrollable, sortable, virtual, auto-saves-column-settings table view.
          <br/><br/><small>* Fish widget not actually included.</small>
        %a.btn.btn-default{:href => "/aristo/"} Learn
      .span4.feature
        %img.thumb{:alt => "XcodeCapp Notification", :src => "img/feature-xcode-capp.png"}/
        %h3
          %img{:alt => "Paint brush", :src => "img/brush.png"}
          Interface Builder
        %p.description
          If you have a Mac you can build your Cappuccino user interface in Xcode's Interface Builder, just like you would in Cocoa. Skip the tweak-coordinated-rebuild-test cycle and just place labels and buttons where you need them. The XcodeCapp utility will do the rest.
        %a.btn.btn-default{:href => "/learn/xcode-basics.html"} Learn

= partial :main_download

#buzz
  .container
    %h2.section_header
      %hr.left.visible-desktop
      %span
        News
      %hr.right.visible-desktop
    .row
      .span5
        %h3 Highlights
        .row
          .buzz-piece
            .span1
              %img{:src=>"img/ars.png"}
            .span4
              %a{:href=>"http://arstechnica.com/journals/apple.ars/2008/06/26/cocoa-on-the-web-280-north-objective-j-and-cappuccino"}
                %h4
                  Cocoa on the web: 280 North, Objective-J, and Cappuccino

              %p ...from what I have experienced using 280 Slides, a future with Cappuccino based-apps is a bright one.

              %strong Chris Foresman, Ars Technica

        .row
          .buzz-piece
            .span1
              %img{:src=>"img/carsonified.png"}
            .span4
              %a{:href=>"http://thinkvitamin.com/web-apps/why-objective-j-cappuccino-and-sproutcore-are-completely-changing-the-web-app-industry"}
                %h4
                  Why Objective-J, Cappuccino and SproutCore are completely changing the web app industry

              %p ...if you use Cappuccino, those apps will automatically look and behave like ... desktop apps - with zero learning curve on the developer's side. He or she can simply focus on building an kick ass app instead of trying to re-invent basic UI functionality every single time.

              %strong Ryan Carson, Carsonified

        .row
          .buzz-piece
            .span1
              %img{:src=>"img/ajaxian.png"}
            .span4
              %a{:href=>"http://ajaxian.com/archives/an-interview-with-280-north-on-objective-j-and-cappuccino"}
                %h4.title
                  An interview with 280 North on Objective-J and Cappuccino

              %p I can see the allure of Objective-J / Cappuccino for building desktop-like Web applications. It gives you a very high level abstraction over the browser. No more DOM. No more CSS layouts, which can be the bane of your existence for a complicated and dynamic layout.

              %strong Dion Almaer, Ajaxian
      .span6.offset1
        %h3 From the Blog
        - blog.articles[0...3].each do |current_article|
          = partial :blog_article_list_format, :locals => { :current_article => current_article }
